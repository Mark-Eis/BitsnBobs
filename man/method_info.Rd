% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{method_info}
\alias{method_info}
\title{Info Attribute of utils::Methods() Function}
\usage{
method_info(..., .arrange_by = across(everything()))
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[utils:methods]{utils::methods}}
  \describe{
    \item{\code{generic.function}}{a generic function, or a character string naming a
    generic function.}
    \item{\code{class}}{a symbol or character string naming a class: only used if
    \code{generic.function} is not supplied.}
  }}

\item{.arrange_by}{<\code{\link[rlang:args_data_masking]{data-masking}}> names of columns or functions for ordering results
using the syntax of \pkg{\link[dplyr]{dplyr}} \code{\link[dplyr:arrange]{arrange()}}. Use \code{\link[dplyr:desc]{desc()}} to sort
by a variable in descending order.}
}
\value{
A \code{\link[base:data.frame]{data.frame}} with class attributes \code{c("info_df", "catapult", "data.frame")} and the
following columns: -

\item{Method}{\verb{character vector} of the S3 method names obtained by pasting the generic function and class together.}

\item{Visible}{\code{logical}, is the method exported from the namespace of the package in which it is defined?}

\item{From}{\code{factor}, the location or package name where the method was found.}

\item{Generic}{\verb{character vector} of the names of the generic.}

\item{isS4}{\code{logical}, true when the method is an S4 method.}
}
\description{
Information on available methods for an S3 and S4 generic function, or all methods for an S3 or S4 class.
}
\details{
\code{method_info()} provides information on available methods for an S3 and S4 \code{\link[base:InternalMethods]{generic function}},
or all methods for an S3 or S4 class obtained from the \code{"info"} attribute returned by \code{\link[utils:methods]{methods()}},
which is more informative than the usual simple \verb{character vector} printed output.

The \code{\link[=print_all]{print_all()}} S3 method for class \code{MethodsFunction} works similarly and is used internally by
\code{method_info()}.
}
\examples{

methods(summary)
method_info(summary)
methods(summary) |> print_all()

methods(class = "glm")
method_info(class = "glm")
method_info(class = "glm", .arrange_by = across(c(isS4, Method)))
methods(class = "glm") |> print_all()
methods(class = "glm") |> print_all(.arrange_by = across(c(isS4, Method)))

}
\seealso{
\code{\link[base:class]{class}}, \code{\link[utils:getS3method]{getS3method}}, \code{\link[utils:methods]{methods()}},
\code{\link[=print_all]{print_all.MethodsFunction()}} and \code{\link[base:UseMethod]{UseMethod}}

Other methods: 
\code{\link{S3Gen_Meth}},
\code{\link{S3_Method_Debug}}
}
\concept{methods}
\keyword{methods}
