% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correl-coef.R
\name{cor_coef.test}
\alias{cor_coef.test}
\title{Confidence Interval and t-Test From Pearson's Correlation Coefficient}
\usage{
cor_coef.test(
  r,
  n,
  alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95
)
}
\arguments{
\item{r}{numeric providing the value of Pearson's product-moment correlation coefficient \var{r}.}

\item{n}{integer providing the number of pairs of observations from which \var{r} was derived; minimum 4.}

\item{alternative}{indicates the alternative hypothesis and must be
    one of \code{"two.sided"}, \code{"greater"} or \code{"less"}.  You
    can specify just the initial letter.  \code{"greater"} corresponds
    to positive association, \code{"less"} to negative association.}

\item{conf.level}{numeric between 0 and 1, the confidence level required; default \var{0.95}.}
}
\value{
A list with class \code{"htest"} containing the following components: -

\item{statistic}{the value of the test statistic.}

\item{parameter}{the degrees of freedom for the test statistic.}

\item{p.value}{the p-value of the test.}

\item{conf.int}{confidence interval of the correlation coefficient (95\% or other specified level).}

\item{estimate}{the correlation coefficient as provided in \var{r}.}

\item{null.value}{the value of the association measure under the null hypothesis, always 0.}

\item{alternative}{a character string describing the alternative hypothesis.}

\item{method}{the character string "Pearson's product-moment correlation".}

\item{data.name}{a character string giving the name of the data.}
}
\description{
This function performs a \emph{t}-test for a given Pearson's product-moment correlation coefficient \var{r} derived
from a sample of size \var{n} from a bivariate normal population, and calculates the population confidence interval.
}
\details{
The t-statistic is given by the correlation coefficient \var{r} divided by its standard error calculated using: -

\deqn{SE = \displaystyle \sqrt{\frac{1 - r^2}{df}}}{%
    SE = sqrt((1 - r <sup>2<\sup>) / df)}

To calculate the confidence interval, firstly a value \eqn{Z_r} is calculated from \var{r}
using the Fisher transformation (inverse hyperbolic tangent): -

\deqn{Z_r = \displaystyle \frac{1}{2}log_e\left(\frac{1 + r}{1 - r}\right)}{%
    Z<sub>r<\sub> = (log<sub>e<\sub>((1 + r)/(1 - r))) / 2}

Log upper and lower bounds (\var{L} and \var{U}) are then calculated using: -

\deqn{L = \displaystyle Z_r - \frac{Z_{(1 - alpha/2)}}{\sqrt{n - 3}}}{%
    \emph{L} = Z<sub>r<\sub> - Z<sub>(1 - alpha/2)<\sub>/sqrt(n - 3)}

\deqn{U = \displaystyle Z_r + \frac{Z_{(1 - alpha/2)}}{\sqrt{n - 3}}}{%
    \emph{U} = Z<sub>r<\sub> + Z<sub>(1 - alpha/2)<\sub>/sqrt(n - 3)}

The confidence interval is then calculated using the hyperbolic tangent: -

\deqn{\displaystyle lower = \frac{e^{2L} - 1}{e^{2L} + 1}, upper = \frac{e^{2U} - 1}{e^{2U} + 1}}{%
  \emph{lower} = (e<sup>2L<\sup> - 1)/(e<sup>2L<\sup> + 1), \emph{upper} = (e<sup>2U<\sup> - 1)/(e<sup>2U<\sup> + 1)}
}
\note{
This function is much like \code{cor.test} and potentially useful if the correlation coefficient is available but
not the original data.
}
\examples{
## Data from cor.test() example (Hollander & Wolfe, 1973): -
 x <- c(44.4, 45.9, 41.9, 53.3, 44.7, 44.1, 50.7, 45.2, 60.1)
 y <- c( 2.6,  3.1,  2.5,  5.0,  3.6,  4.0,  5.2,  2.8,  3.8)

 (corxy <- cor(x, y))

 cor_coef.test(corxy, 9)  ## alternative two-sided by default
 cor.test(x, y)  ## Result should be identical

 cor_coef.test(corxy, 9, alternative = "less")
 cor.test(x, y, alternative = "less")  ## Result should be identical

 cor_coef.test(corxy, 9, alternative = "greater")
 cor.test(x, y, alternative = "greater")  ## Result should be identical

 rm(corxy, x, y)
}
\seealso{
\code{\link[stats]{cor}}, \code{\link[stats]{cor.test}}, \code{\link[stats]{t.test}}

Other correl_coef: 
\code{\link{phi_coef.test}()},
\code{\link{phi_coef}()}
}
\concept{correl_coef}
\keyword{htest}
